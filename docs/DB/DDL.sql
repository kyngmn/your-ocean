CREATE TABLE "CopyOfCopyOfgames_session2" (
	"id"	SMALLSERIAL		NOT NULL,
	"BART_at"	TIMESTAMPTZ		NULL,
	"GNG_at"	TIMESTAMPTZ		NULL,
	"Field2"	JSON		NULL
);

CREATE TABLE "my_chat_messages" (
	"id"	BIGSERIAL		NOT NULL,
	"user_id"	INTEGER		NOT NULL,
	"sender_actor_id"	INTEGER		NOT NULL,
	"message"	TEXT		NOT NULL,
	"created_at"	TIMESTAMPTZ		NOT NULL
);

COMMENT ON COLUMN "my_chat_messages"."user_id" IS 'FK →  users.id';

COMMENT ON COLUMN "my_chat_messages"."sender_actor_id" IS 'FK →  actors.id';

CREATE TABLE "survey_responses" (
	"id"	INTEGER GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"survey_id"	SMALLINT		NOT NULL,
	"user_id"	INTEGER		NOT NULL,
	"value"	SMALLINT		NOT NULL,
	"started_at"	TIMESTAMPTZ		NOT NULL
);

COMMENT ON COLUMN "survey_responses"."id" IS 'PK';

COMMENT ON COLUMN "survey_responses"."survey_id" IS 'FK → surveys.id';

COMMENT ON COLUMN "survey_responses"."user_id" IS 'FK → users.id';

COMMENT ON COLUMN "survey_responses"."started_at" IS '해당 페이지 열린 시간';

CREATE TABLE "game_results_ug" (
	"id"	BIGSERIAL		NOT NULL,
	"earned_amount"	INTEGER		NOT NULL,
	"finished_at"	TIMESTAMPTZ		NULL
);

COMMENT ON COLUMN "game_results_ug"."earned_amount" IS '게임을 통해 획득한 금액 (사용자에게 보여줄 게이미피케이션 요소)';

CREATE TABLE "game_logs_gng" (
	"id"	BIGSERIAL		NOT NULL,
	"game_id"	BIGINT		NOT NULL,
	"trial_started_at"	INTEGER		NOT NULL,
	"stimulus_type"	BOOLEAN		NOT NULL,
	"stimulus_appeared_at"	TIMESTAMPTZ		NOT NULL,
	"responded_at"	TIMESTAMPTZ		NULL,
	"is_secceeded"	BOOLEAN		NULL
);

COMMENT ON COLUMN "game_logs_gng"."stimulus_type" IS '0: GO 1: NO GO';

CREATE TABLE "game_logs_ug" (
	"id"	BIGSERIAL		NOT NULL,
	"game_id"	BIGINT		NOT NULL,
	"role_type"	ENUM		NOT NULL,
	"persona_type"	ENUM		NOT NULL,
	"money"	INTEGER		NOT NULL,
	"rate"	INTEGER		NOT NULL,
	"is_accepted"	BOOLEAN	DEFAULT True	NULL,
	"finished_at"	TIMESTAMPTZ		NULL
);

COMMENT ON COLUMN "game_logs_ug"."role_type" IS '1 : 제안자, 2 : 응답자, 3 : 무조건 수락 하는 상황의 제안자';

COMMENT ON COLUMN "game_logs_ug"."persona_type" IS '가족, 친구, 낯선사람';

COMMENT ON COLUMN "game_logs_ug"."money" IS '고액, 소액';

COMMENT ON COLUMN "game_logs_ug"."rate" IS '사용자 입장에서의 비율 (0~10)';

COMMENT ON COLUMN "game_logs_ug"."is_accepted" IS 'Ture or False(게임 3번 타입은 무조건 T)';

CREATE TABLE "game_bart_results" (
	"id"	BIGINT GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"session_id"	BIGINT		NOT NULL,
	"reward_amount"	INTEGER		NOT NULL,
	"missed_reward"	INTEGER		NOT NULL,
	"total_balloons"	INTEGER		NOT NULL,
	"success_balloons"	INTEGER		NOT NULL,
	"fail_balloons"	INTEGER		NOT NULL,
	"avg_pumps"	NUMERIC(6,2)		NOT NULL,
	"computed_at"	TIMESTAMPTZ	DEFAULT now()	NOT NULL
);

COMMENT ON COLUMN "game_bart_results"."id" IS 'PK';

COMMENT ON COLUMN "game_bart_results"."session_id" IS 'FK → game_sessions.id, 세션당 1행(UNIQUE)';

COMMENT ON COLUMN "game_bart_results"."reward_amount" IS '게임을 진행하면서 얻은 상금';

COMMENT ON COLUMN "game_bart_results"."missed_reward" IS '풍선이 터짐으로써 얻지 못한 상금';

COMMENT ON COLUMN "game_bart_results"."total_balloons" IS '게임을 진행한 총 풍선 수';

COMMENT ON COLUMN "game_bart_results"."success_balloons" IS '터지지 않고 상금으로 전환된 풍선 수';

COMMENT ON COLUMN "game_bart_results"."fail_balloons" IS '상금으로 전환되지 못하고 터진 풍선 수';

COMMENT ON COLUMN "game_bart_results"."avg_pumps" IS '풍선당 평균 펌프 횟수,반올림 손실 방지';

COMMENT ON COLUMN "game_bart_results"."computed_at" IS '결과 산출 시간';

CREATE TABLE "diaries" (
	"id"	INTEGER GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"user_id"	INTEGER		NOT NULL,
	"title"	VARCHAR(150)		NOT NULL,
	"content"	TEXT		NOT NULL,
	"diary_date"	DATE		NOT NULL,
	"created_at"	TIMESTAMPTZ	DEFAULT now()	NOT NULL,
	"updated_at"	TIMESTAMPTZ		NULL,
	"deleted_at"	TIMESTAMPTZ		NULL
);

COMMENT ON COLUMN "diaries"."id" IS 'PK';

COMMENT ON COLUMN "diaries"."user_id" IS 'FK → users.id';

COMMENT ON COLUMN "diaries"."content" IS '본문은 text 적합';

CREATE TABLE "game_bart_clicks" (
	"id"	BIGSERIAL		NOT NULL,
	"response_id"	BIGINT		NOT NULL,
	"clicked_at"	TIMESTAMPTZ		NOT NULL,
	"Field"	VARCHAR(255)		NULL
);

COMMENT ON COLUMN "game_bart_clicks"."id" IS '풍선 60개 중 개별 1개의 풍선';

COMMENT ON COLUMN "game_bart_clicks"."clicked_at" IS '풍선 당 클릭 시간';

CREATE TABLE "users" (
	"id"	INTEGER GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"email"	VARCHAR(255)		NOT NULL,
	"provider"	VARCHAR(255)		NOT NULL,
	"social_id"	VARCHAR(255)		NOT NULL,
	"nickname"	VARCHAR(10)		NOT NULL,
	"profile_image_url"	VARCHAR(255)		NULL,
	"created_at"	TIMESTAMPTZ	DEFAULT now()	NOT NULL,
	"updated_at"	TIMESTAMPTZ		NOT NULL,
	"deleted_at"	TIMESTAMPTZ		NULL,
	"ai_status"	ENUM('UNSET', 'PLANNED', 'GENERATING', 'READY', 'FAILED')	DEFAULT 'UNSET'	NOT NULL
);

COMMENT ON COLUMN "users"."id" IS 'PK';

COMMENT ON COLUMN "users"."email" IS 'UNIQUE';

COMMENT ON COLUMN "users"."social_id" IS '외부 연동/확장 고려';

COMMENT ON COLUMN "users"."nickname" IS '한글 10자 제한';

COMMENT ON COLUMN "users"."profile_image_url" IS 'S3/외부 저장소 링크';

COMMENT ON COLUMN "users"."deleted_at" IS 'soft delete 용';

COMMENT ON COLUMN "users"."ai_status" IS '자신만의 AI 생성 상태';

CREATE TABLE "diary_chat_messages" (
	"id"	BIGINT GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"diary_id"	INTEGER		NOT NULL,
	"sender_actor_id"	INTEGER		NOT NULL,
	"message"	TEXT		NOT NULL,
	"created_at"	TIMESTAMPTZ	DEFAULT now()	NOT NULL
);

COMMENT ON COLUMN "diary_chat_messages"."id" IS 'PK';

COMMENT ON COLUMN "diary_chat_messages"."diary_id" IS 'FK → diaries.id';

COMMENT ON COLUMN "diary_chat_messages"."sender_actor_id" IS 'FK →  actors.id';

COMMENT ON COLUMN "diary_chat_messages"."message" IS '본문';

CREATE TABLE "actors" (
	"id"	INTEGER GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"kind"	ENUM('USER' ,  'PERSONA')		NOT NULL,
	"user_id"	INTEGER		NULL,
	"persona_id"	INTEGER		NULL
);

COMMENT ON COLUMN "actors"."id" IS 'PK';

COMMENT ON COLUMN "actors"."user_id" IS 'FK → users.id';

COMMENT ON COLUMN "actors"."persona_id" IS 'FK →  user_personas.id';

CREATE TABLE "friend_chat_messages" (
	"id"	INTEGER GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"room_id"	INTEGER		NOT NULL,
	"sender_actor_id"	INTEGER		NOT NULL,
	"message"	TEXT		NOT NULL,
	"created_at"	TIMESTAMPTZ	DEFAULT now()	NOT NULL
);

COMMENT ON COLUMN "friend_chat_messages"."room_id" IS 'FK → friends.id';

COMMENT ON COLUMN "friend_chat_messages"."sender_actor_id" IS 'FK →  actors.id';

CREATE TABLE "survey_responses_log" (
	"id"	BIGINT GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"response_id"	INTEGER		NOT NULL,
	"value"	SMALLINT		NOT NULL,
	"occurred_at"	TIMESTAMPTZ	DEFAULT now()	NOT NULL,
	"created_at"	TIMESTAMPTZ	DEFAULT now()	NOT NULL
);

COMMENT ON COLUMN "survey_responses_log"."id" IS 'PK';

COMMENT ON COLUMN "survey_responses_log"."response_id" IS 'FK → survey_responses.id';

COMMENT ON COLUMN "survey_responses_log"."value" IS '클릭 시 선택한 값';

COMMENT ON COLUMN "survey_responses_log"."occurred_at" IS '클릭 시각';

CREATE TABLE "CopyOfgames_session2" (
	"id"	SMALLSERIAL		NOT NULL,
	"BART_at"	TIMESTAMPTZ		NULL,
	"GNG_at"	TIMESTAMPTZ		NULL,
	"Field"	VARCHAR(255)		NULL,
	"Field2"	VARCHAR(255)		NULL,
	"Field3"	VARCHAR(255)		NULL,
	"Field4"	VARCHAR(255)		NULL,
	"Field5"	VARCHAR(255)		NULL
);

CREATE TABLE "game_sessions" (
	"id"	BIGINT GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"user_id"	INTEGER		NOT NULL,
	"game_type"	ENUM('BART','GNG','UG')		NOT NULL,
	"finished_at"	TIMESTAMPTZ		NULL,
	"started_at"	TIMESTAMPTZ		NULL
);

COMMENT ON COLUMN "game_sessions"."id" IS 'PK';

COMMENT ON COLUMN "game_sessions"."user_id" IS 'FK → users.id';

CREATE TABLE "big_five_codes" (
	"id"	SMALLINT GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"big_code"	ENUM('O', 'C', 'E', 'A', 'N')		NOT NULL,
	"small_code"	VARCHAR(25)		NOT NULL,
	"content"	TEXT		NOT NULL
);

COMMENT ON COLUMN "big_five_codes"."id" IS 'PK, 총 30개 시드';

COMMENT ON COLUMN "big_five_codes"."small_code" IS 'O1~N6, 패턴 체크 가능';

COMMENT ON COLUMN "big_five_codes"."content" IS 'O1~N6 조합별 설명 텍스트';

CREATE TABLE "reports" (
	"id"	INTEGER GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"user_id"	INTEGER		NOT NULL,
	"report_type"	ENUM('SELF', 'FINAL')	DEFAULT 'SELF'	NOT NULL,
	"content"	JSONB		NOT NULL,
	"created_at"	TIMESTAMPTZ		NULL
);

COMMENT ON COLUMN "reports"."content" IS '각 big five 에 맞게';

CREATE TABLE "CopyOfgames_session" (
	"id"	SMALLSERIAL		NOT NULL,
	"BART_at"	TIMESTAMPTZ		NULL,
	"GNG_at"	TIMESTAMPTZ		NULL,
	"UG_at"	TIMESTAMPTZ		NULL,
	"score"	INT[]		NULL,
	"Field"	VARCHAR(255)		NULL
);

CREATE TABLE "game_results_gng" (
	"id"	BIGSERIAL		NOT NULL,
	"total_correct_cnt"	INTEGER		NOT NULL,
	"total_incorrect_cnt"	INTEGER		NOT NULL,
	"nogo_incorrect_cnt"	INTEGER		NOT NULL,
	"avg_reaction_time"	NUMERIC(5,1)		NOT NULL,
	"played_at"	TIMESTAMPTZ		NOT NULL,
	"finished_at"	TIMESTAMPTZ		NULL
);

COMMENT ON COLUMN "game_results_gng"."nogo_incorrect_cnt" IS 'nogo에서 억제하지 못한 수(비율)';

COMMENT ON COLUMN "game_results_gng"."avg_reaction_time" IS 'go에서 올바르게 반응한 속도를 기반으로 평균 반응 속도';

CREATE TABLE "surveys" (
	"id"	SMALLINT GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"big_five_id"	SMALLINT		NOT NULL,
	"is_reverse_scored"	BOOLEAN		NOT NULL,
	"question_text"	VARCHAR(500)		NOT NULL
);

COMMENT ON COLUMN "surveys"."id" IS 'PK, 최대';

COMMENT ON COLUMN "surveys"."big_five_id" IS 'FK → big_five_codes.id';

COMMENT ON COLUMN "surveys"."is_reverse_scored" IS '역채점 문항 여부';

COMMENT ON COLUMN "surveys"."question_text" IS '설문 문항 텍스트';

CREATE TABLE "user_personas" (
	"id"	INTEGER GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"user_id"	INTEGER		NOT NULL,
	"persona_code"	ENUM('O', 'C', 'E', 'A', 'N')		NOT NULL,
	"nickname"	VARCHAR(25)		NULL,
	"created_at"	TIMESTAMPTZ	DEFAULT now()	NOT NULL,
	"updated_at"	TIMESTAMPTZ		NOT NULL,
	"deleted_at"	TIMESTAMPTZ		NULL
);

COMMENT ON COLUMN "user_personas"."id" IS 'PK';

COMMENT ON COLUMN "user_personas"."user_id" IS 'FK → users.id';

COMMENT ON COLUMN "user_personas"."nickname" IS 'null이면 기본명 사용';

COMMENT ON COLUMN "user_personas"."deleted_at" IS 'soft delete 용';

CREATE TABLE "game_logs_bart" (
	"id"	BIGSERIAL		NOT NULL,
	"game_id"	BIGINT		NOT NULL,
	"ballon_id"	INTEGER		NOT NULL,
	"color"	ENUM		NOT NULL,
	"max_size"	INTEGER		NOT NULL,
	"is_popped"	BOOLEAN		NOT NULL,
	"click_cnt"	INTEGER		NULL,
	"played_at"	TIMESTAMPTZ		NOT NULL,
	"finished_at"	TIMESTAMPTZ		NULL
);

CREATE TABLE "friends" (
	"id"	INTEGER GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"user_id"	INTEGER		NOT NULL,
	"friend_id"	INTEGER		NOT NULL,
	"created_at"	TIMESTAMPTZ	DEFAULT now()	NOT NULL,
	"deleted_at"	TIMESTAMPTZ		NULL
);

COMMENT ON COLUMN "friends"."id" IS 'PK (방 ID로도 사용)';

COMMENT ON COLUMN "friends"."user_id" IS '관계의 주체, FK → users.id';

COMMENT ON COLUMN "friends"."friend_id" IS '관계의 대상, FK → users.id';

COMMENT ON COLUMN "friends"."deleted_at" IS 'soft delete 용';

CREATE TABLE "games_session" (
	"id"	SMALLSERIAL		NOT NULL,
	"BART_at"	TIMESTAMPTZ		NULL,
	"GNG_at"	TIMESTAMPTZ		NULL,
	"UG_at"	TIMESTAMPTZ		NULL,
	"score"	INT[]		NULL,
	"Field"	VARCHAR(255)		NULL
);

CREATE TABLE "friend_invitations" (
	"id"	INTEGER GENERATED BY DEFAULT AS IDENTITY		NOT NULL,
	"inviter_user_id"	INTEGER		NOT NULL,
	"invitee_user_id"	INTEGER		NOT NULL,
	"status"	ENUM('PENDING','ACCEPTED','REJECTED')	DEFAULT 'PENDING'	NOT NULL,
	"created_at"	TIMESTAMPTZ	DEFAULT now()	NOT NULL,
	"responded_at"	TIMESTAMPTZ		NULL,
	"deleted_at"	TIMESTAMPTZ		NULL
);

COMMENT ON COLUMN "friend_invitations"."id" IS 'PK';

COMMENT ON COLUMN "friend_invitations"."inviter_user_id" IS 'FK → users.id';

COMMENT ON COLUMN "friend_invitations"."invitee_user_id" IS 'FK → users.id';

COMMENT ON COLUMN "friend_invitations"."responded_at" IS '수락/거절 시각';

COMMENT ON COLUMN "friend_invitations"."deleted_at" IS 'soft delete 용';

