spring:
  application:
    name: myocean
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:myocean}?serverTimezone=Asia/Seoul
    username: ${POSTGRES_USER:myocean}
    password: ${POSTGRES_PASSWORD:myocean303}
    driver-class-name: org.postgresql.Driver

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6381}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms

  jpa:
    hibernate:
      ddl-auto: update #create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: Asia/Seoul
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  sql:
    init:
      mode: always

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            redirect-uri: ${OAUTH_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}
            scope:
              - email
              - profile

jwt:
  secret: ${JWT_SECRET:myocean-jwt-secret-key-for-development-only-change-in-production}
  expiration: 86400000 # 24시간 (access token)
  refresh-expiration: 1209600000 # 14일 (refresh token)

app:
  frontend-url: ${FRONTEND_URL:http://localhost:3000}
# AI 서버 설정
ai:
  server:
    url: ${AI_SERVER_URL:http://localhost:8000}

# OpenAI 설정
openai:
  api:
    key: ${OPENAI_API_KEY:your-openai-api-key}
    url: ${OPENAI_API_URL:https://api.openai.com/v1}
  model: ${OPENAI_MODEL:gpt-4o}
  models:
    light: ${OPENAI_MODEL_LIGHT:gpt-4o-mini}
    mini: ${OPENAI_MODEL_MINI:gpt-4o-mini}
    standard: ${OPENAI_MODEL_STANDARD:gpt-4o}

# MinIO 설정
minio:
  endpoint: ${MINIO_ENDPOINT:http://myocean-minio:9000}
  access-key: ${MINIO_ACCESS_KEY:minioadmin}
  secret-key: ${MINIO_SECRET_KEY:minioadmin}
  bucket-name: ${MINIO_BUCKET_NAME:myocean-profiles}

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    com.myocean.myocean.global.openai: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG

server:
  # 프록시 뒤에서 HTTPS 요청을 올바르게 처리하도록 설정
  forward-headers-strategy: framework
  # 프록시 헤더를 신뢰하도록 설정
  use-forward-headers: true