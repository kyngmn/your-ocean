events {
    worker_connections 1024;
}

# TCP 스트림 프록시 설정 (Kafka용)
stream {
    # Kafka 클러스터 업스트림 정의
    upstream kafka_cluster {
        least_conn;  # 연결 수 기반 로드밸런싱
        server 172.26.14.91:9092 weight=1 max_fails=3 fail_timeout=30s;
        server 172.26.14.91:9093 weight=1 max_fails=3 fail_timeout=30s;
    }

    # 외부 접근용 Kafka 프록시 서버
    server {
        listen 9094;               # 외부 노출 포트
        proxy_pass kafka_cluster;  # 업스트림으로 프록시
        proxy_timeout 10s;
        proxy_connect_timeout 5s;
        proxy_responses 1;
    }
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;
    keepalive_timeout  65;

server {
    # HTTP 포트 (정답지는 HTTPS였지만 일단 HTTP로)
    listen 80;

    # 도메인 설정
    server_name data.myocean.cloud;

    # Grafana 프록시
    location /grafana/ {
        proxy_pass http://grafana:3000/grafana/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Prometheus 프록시
    location /prometheus/ {
        proxy_pass http://prometheus:9090/prometheus/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Node Exporter 프록시
    location /node-exporter/ {
        proxy_pass http://node-exporter:9100/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # HTML 내용에서 상대 경로를 절대 경로로 변경
        sub_filter 'href="/' 'href="/node-exporter/';
        sub_filter 'src="/' 'src="/node-exporter/';
        sub_filter_once off;
    }

    # cAdvisor 프록시 (컨테이너 내부 포트 8080 사용)
    location /cadvisor/ {
        proxy_pass http://cadvisor:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # cAdvisor 전용 리다이렉트 처리 (다른 서비스에 영향 없음)
        proxy_redirect http://cadvisor:8080/ /cadvisor/;
        proxy_redirect http://cadvisor:8080/containers/ /cadvisor/containers/;

        # HTML 내용에서 상대 경로를 절대 경로로 변경
        sub_filter 'href="/' 'href="/cadvisor/';
        sub_filter 'src="/' 'src="/cadvisor/';
        sub_filter_once off;
    }

    # cAdvisor containers 경로 직접 처리
    location /containers/ {
        proxy_pass http://cadvisor:8080/containers/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # HTML 내용에서 상대 경로를 절대 경로로 변경
        sub_filter 'href="/' 'href="/';
        sub_filter 'src="/' 'src="/';
        sub_filter_once off;
    }

    # cAdvisor static files (CSS, JS, images)
    location /static/ {
        proxy_pass http://cadvisor:8080/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # cAdvisor API endpoints
    location /api/ {
        proxy_pass http://cadvisor:8080/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Kafka Sink Connector REST API
    location /kafka-sink/ {
        proxy_pass http://172.26.14.91:8083/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # MinIO S3 API
    location /s3/ {
        proxy_pass http://minio1:9000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # MinIO Console static files
    location /minio/static/ {
        proxy_pass http://minio1:9001/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # MinIO Console styles
    location /minio/styles/ {
        proxy_pass http://minio1:9001/styles/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # MinIO Console images
    location /minio/images/ {
        proxy_pass http://minio1:9001/images/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # MinIO Console
    location /minio/ {
        proxy_pass http://minio1:9001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Rewrite relative paths to absolute paths for MinIO static files
        sub_filter 'src="./static/' 'src="/minio/static/';
        sub_filter 'href="./styles/' 'href="/minio/styles/';
        sub_filter 'src="./images/' 'src="/minio/images/';
        sub_filter_once off;
        sub_filter_types text/html;
    }

    # Spark Master UI
    location /spark/ {
        proxy_pass http://172.26.14.91:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Kafka UI
    location /kafka-ui/ {
        proxy_pass http://kafka-ui:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        return 200 'Ocean Data Services\n\nAvailable services:\n- /kafka-sink/ - Kafka Sink Connector (Kafka → MinIO)\n- /kafka-ui/ - Kafka UI Dashboard\n- /s3/ - MinIO S3 API\n- /minio/ - MinIO Console\n- /spark/ - Spark Master UI\n- /prometheus/ - Prometheus Metrics\n- /grafana/ - Grafana Dashboards\n- /node-exporter/ - Node Exporter\n- /cadvisor/ - cAdvisor\n';
        add_header Content-Type text/plain;
    }
}

}