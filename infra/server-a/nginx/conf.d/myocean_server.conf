server {
    # HTTPS를 위한 443 포트, SSL 활성화
    listen 443 ssl;
    
    # 도메인 설정
    server_name myocean.cloud;
    
    # myocean.cloud용 SSL 설정 포함
    include /etc/nginx/conf.d/myocean_ssl.conf;
    
    # 공통 SSL 보안 설정 포함
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # 보안 헤더 설정
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header Strict-Transport-Security "max-age=0" always;
    
    # Grafana 프록시
    location /grafana/ {
        proxy_pass http://grafana:3000/grafana/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Prometheus 프록시
    location /prometheus/ {
        proxy_pass http://prometheus:9090/prometheus/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Node Exporter 프록시
    location /node-exporter/ {
        proxy_pass http://node-exporter:9100/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # HTML 내용에서 상대 경로를 절대 경로로 변경
        sub_filter 'href="/' 'href="/node-exporter/';
        sub_filter 'src="/' 'src="/node-exporter/';
        sub_filter_once off;
    }
    
    # cAdvisor 프록시 (컨테이너 내부 포트 8080 사용)
    location /cadvisor/ {
        proxy_pass http://cadvisor:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # cAdvisor 전용 리다이렉트 처리 (다른 서비스에 영향 없음)
        proxy_redirect http://cadvisor:8080/ /cadvisor/;
        proxy_redirect http://cadvisor:8080/containers/ /cadvisor/containers/;
        
        # HTML 내용에서 상대 경로를 절대 경로로 변경
        sub_filter 'href="/' 'href="/cadvisor/';
        sub_filter 'src="/' 'src="/cadvisor/';
        sub_filter_once off;
    }
    
    # cAdvisor containers 경로 직접 처리
    location /containers/ {
        proxy_pass http://cadvisor:8080/containers/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # HTML 내용에서 상대 경로를 절대 경로로 변경  
        sub_filter 'href="/' 'href="/';
        sub_filter 'src="/' 'src="/';
        sub_filter_once off;
    }
    
    # cAdvisor static files (CSS, JS, images)
    location /static/ {
        proxy_pass http://cadvisor:8080/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # cAdvisor API endpoints
    location /api/ {
        proxy_pass http://cadvisor:8080/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Jenkins 프록시
    location /jenkins/ {
        proxy_pass http://jenkins:8080/jenkins/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Jenkins에 필요한 추가 헤더
        proxy_redirect http:// https://;
        proxy_max_temp_file_size 0;
        
        # Jenkins WebSocket 지원
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Spring Boot 프록시
    # location /spring/ {
        # proxy_pass http://myocean-container:8080/;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_set_header X-Forwarded-Port $server_port;
    # }

    # MyOcean Blue-Green 프록시 (기본값: green 환경)
    location /myocean-bg/ {
        proxy_pass http://myocean-blue:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # Blue-Green Demo 프록시 (기본값: blue 환경)
    location /blue-green-demo/ {
        proxy_pass http://blue-green-demo-blue:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }
    
    location / {
        # Next.js 프론트엔드로 프록시
        proxy_pass http://myocean-frontend:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;

        # Next.js 개발 서버 지원을 위한 WebSocket 설정
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 에러 페이지 설정
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}